version: '3.8'

services:
  db:
    image: ankane/pgvector
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: pern_app
    ports:
      - "0.0.0.0:5433:5432"  # Bind to all interfaces
    volumes:
      - postgres_mvp_data:/var/lib/postgresql/data
    networks:
      - pern-network
    restart: unless-stopped

  api:
    build: ./backend
    environment:
      DATABASE_URL: postgres://postgres:yourpassword@db:5432/pern_app
      NODE_ENV: development
    ports:
      - "0.0.0.0:5000:5000"  # Bind to all interfaces
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - pern-network
    depends_on:
      - db
    restart: unless-stopped

  client:
    build: ./frontend
    environment:
      - HOST=0.0.0.0
      - VITE_API_BASE_URL=http://${HOST_IP}:5000 
    ports:
      - "0.0.0.0:5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - pern-network
    depends_on:
      - api
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "0.0.0.0:5050:80"
    networks:
      - pern-network
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_mvp_data:

networks:
  pern-network:
    driver: bridge
